[{"code":"const angularData = angular.element($(\"#wrapperDiv\")).scope();","type":"js","displayName":"AngularJS - Angular Scope - Get Data Model","setWrapperDivNameOnInsert":false},{"code":"<div ng-class=\"developer.accuracy < 0 ? 'positive' : 'negative'\"></div>","type":"html","displayName":"AngularJS - Conditional Classes - Single Class","setWrapperDivNameOnInsert":false},{"code":"<div ng-class=\"{'negative': data.confidence < 0, 'positive': data.confidence >= 0}\"></div>","type":"html","displayName":"AngularJS - Conditional Classes - Multiple Classes","setWrapperDivNameOnInsert":false},{"code":"<div ng-if=\"data && !data.metric_id\">\n    <span>Shows if the condition was met</span>\n</div>","type":"html","displayName":"AngularJS - Conditional HTML - ng-show","setWrapperDivNameOnInsert":false},{"code":"<div ng-if=\"data && !data.metric_id\">\n    <span>Shows if the condition was met</span>\n</div>","type":"html","displayName":"AngularJS - Conditional HTML - ng-if","setWrapperDivNameOnInsert":false},{"code":"const $http = angular.element('#wrapperDiv').injector().get('$http');","type":"js","displayName":"AngularJS - Modules - http","setWrapperDivNameOnInsert":false},{"code":"const $q= angular.element('#wrapperDiv').injector().get('$q');","type":"js","displayName":"AngularJS - Modules - q","setWrapperDivNameOnInsert":false},{"code":"const $timeout = angular.element('#wrapperDiv').injector().get('$timeout');","type":"js","displayName":"AngularJS - Modules - timeout","setWrapperDivNameOnInsert":false},{"code":"ng-repeat=\"objective in objectives\"","type":"html","displayName":"AngularJS - ng-repeat - Simple Example","setWrapperDivNameOnInsert":false},{"code":"ng-repeat=\"objective in objectives | orderBy: 'name'\"","type":"html","displayName":"AngularJS - ng-repeat - With Sorting","setWrapperDivNameOnInsert":false},{"code":"ng-repeat=\"objective in objectives | filter: myFilter as filteredObjectives\"","type":"html","displayName":"AngularJS - ng-repeat - With Filtering","setWrapperDivNameOnInsert":false},{"code":"angularScope.myFilter = function(objective) {\r\n    return objective.name.length < 10;\r\n}","type":"js","displayName":"AngularJS - ng-repeat - With Filtering Function","setWrapperDivNameOnInsert":false},{"code":"ng-init=\"objects = (data == undefined) ? [] : data.default\"","type":"html","displayName":"AngularJS - SQL Data - Standard ng-init","setWrapperDivNameOnInsert":false},{"code":"let dataRows = (angularScope.data == undefined ? [] : [...angularScope.data.default]);","type":"js","displayName":"AngularJS - SQL Data - New Object from data.default","setWrapperDivNameOnInsert":false},{"code":"$http.get(BASE_URL + 'API_URL').then(\r\n    //Success Handler\r\n    function(response) {\r\n        console.log(response);\r\n    },\r\n    //Failure Handler\r\n    function(response) {\r\n        console.log(response);\r\n    }\r\n);","type":"js","displayName":"API - Angular API - GET","setWrapperDivNameOnInsert":false},{"code":"AngularJS/Modules/code-examples/01-http.js","type":"rel","displayName":"API - Angular API - GET","setWrapperDivNameOnInsert":false},{"code":"$http.post(BASE_URL + 'API_URL',\r\n    JSON.stringify(taskObject)\r\n).then(\r\n    //Success Handler\r\n    function(response) {\r\n        console.log(response);\r\n    },\r\n    //Failure Handler\r\n    function(response) {\r\n        console.log(response);\r\n    }\r\n);","type":"js","displayName":"API - Angular API - POST","setWrapperDivNameOnInsert":false},{"code":"AngularJS/Modules/code-examples/01-http.js","type":"rel","displayName":"API - Angular API - POST","setWrapperDivNameOnInsert":false},{"code":"$http.patch(BASE_URL + 'API_URL',\r\n    JSON.stringify(someData)\r\n).then(\r\n    //Success Handler\r\n    function(response) {\r\n        console.log(response);\r\n    },\r\n    //Failure Handler\r\n    function(response) {\r\n        console.log(response);\r\n    }\r\n);","type":"js","displayName":"API - Angular API - PATCH","setWrapperDivNameOnInsert":false},{"code":"AngularJS/Modules/code-examples/01-http.js","type":"rel","displayName":"API - Angular API - PATCH","setWrapperDivNameOnInsert":false},{"code":"$http.put(BASE_URL + 'API_URL',\r\n    JSON.stringify(someData)\r\n).then(\r\n    //Success Handler\r\n    function(response) {\r\n        console.log(response);\r\n    },\r\n    //Failure Handler\r\n    function(response) {\r\n        console.log(response);\r\n    }\r\n);","type":"js","displayName":"API - Angular API - PUT","setWrapperDivNameOnInsert":false},{"code":"AngularJS/Modules/code-examples/01-http.js","type":"rel","displayName":"API - Angular API - PUT","setWrapperDivNameOnInsert":false},{"code":"$http.delete(BASE_URL + 'API_URL').then(\r\n    //Success Handler\r\n    function(response) {\r\n        console.log(response);\r\n    },\r\n    //Failure Handler\r\n    function(response) {\r\n        console.log(response);\r\n    }\r\n);","type":"js","displayName":"API - Angular API - DELETE","setWrapperDivNameOnInsert":false},{"code":"AngularJS/Modules/code-examples/01-http.js","type":"rel","displayName":"API - Angular API - DELETE","setWrapperDivNameOnInsert":false},{"code":"$http({\r\n    method: 'POST',\r\n    url: BASE_URL + 'API_URL',\r\n    data: JSON.stringify(someData)\r\n}).then(\r\n    //Success Handler\r\n    function(response) {\r\n        console.log(response);\r\n    },\r\n    //Failure Handler\r\n    function(response) {\r\n        console.log(response);\r\n    }\r\n);","type":"js","displayName":"API - Angular API - HTTP","setWrapperDivNameOnInsert":false},{"code":"AngularJS/Modules/code-examples/01-http.js","type":"rel","displayName":"API - Angular API - HTTP","setWrapperDivNameOnInsert":false},{"code":"let call1 = $http.get(BASE_URL + 'API_URL');\r\nlet call2 = $http.get(BASE_URL + 'API_URL_2');\r\n\r\n$q.all([call1, call2]).then(\r\n    //Success Handler\r\n    function(responseArray) {\r\n        console.log(responseArray);\r\n    },\r\n    //Failure Handler\r\n    function(failureResponse) {\r\n        console.log(failureResponse);\r\n    }\r\n);","type":"js","displayName":"API - Angular API - Multiple GET","setWrapperDivNameOnInsert":false},{"code":"AngularJS/Modules/code-examples/01-http.js\r\nAngularJS/Modules/code-examples/05-q.js","type":"rel","displayName":"API - Angular API - Multiple GET","setWrapperDivNameOnInsert":false},{"code":"const CONFIG = {\r\n    headers: {\r\n        'gtmhub-application-name':'your-application-name'\r\n    },\r\n    params: {\r\n        fields: 'name,id,email'\r\n    }\r\n};\r\n\r\n$http.get(BASE_URL + 'API_URL', config).then(\r\n    //Success Handler\r\n    function(response) {\r\n        console.log(response);\r\n    },\r\n    //Failure Handler\r\n    function(response) {\r\n        console.log(response);\r\n    }\r\n);","type":"js","displayName":"API - Angular API with Config - GET","setWrapperDivNameOnInsert":false},{"code":"AngularJS/Modules/code-examples/01-http.js","type":"rel","displayName":"API - Angular API with Config - GET","setWrapperDivNameOnInsert":false},{"code":"const CONFIG = {\r\n    headers: {\r\n        'gtmhub-application-name':'your-application-name'\r\n    },\r\n    params: {\r\n        'SomeQueryParameter': 'someValue'\r\n    }\r\n};\r\n\r\n$http.post(BASE_URL + 'API_URL',\r\n    JSON.stringify(someData),\r\n    CONFIG\r\n).then(\r\n    //Success Handler\r\n    function(response) {\r\n        console.log(response);\r\n    },\r\n    //Failure Handler\r\n    function(response) {\r\n        console.log(response);\r\n    }\r\n);","type":"js","displayName":"API - Angular API with Config - POST","setWrapperDivNameOnInsert":false},{"code":"AngularJS/Modules/code-examples/01-http.js","type":"rel","displayName":"API - Angular API with Config - POST","setWrapperDivNameOnInsert":false},{"code":"const CONFIG = {\r\n    headers: {\r\n        'gtmhub-application-name':'your-application-name'\r\n    },\r\n    params: {\r\n        'SomeQueryParameter': 'someValue'\r\n    }\r\n};\r\n\r\n$http.patch(BASE_URL + 'API_URL',\r\n    JSON.stringify(someData),\r\n    CONFIG\r\n).then(\r\n    //Success Handler\r\n    function(response) {\r\n        console.log(response);\r\n    },\r\n    //Failure Handler\r\n    function(response) {\r\n        console.log(response);\r\n    }\r\n);","type":"js","displayName":"API - Angular API with Config - PATCH","setWrapperDivNameOnInsert":false},{"code":"AngularJS/Modules/code-examples/01-http.js","type":"rel","displayName":"API - Angular API with Config - PATCH","setWrapperDivNameOnInsert":false},{"code":"const CONFIG = {\r\n    headers: {\r\n        'gtmhub-application-name':'your-application-name'\r\n    },\r\n    params: {\r\n        'SomeQueryParameter': 'someValue'\r\n    }\r\n};\r\n\r\n$http.put(BASE_URL + 'API_URL',\r\n    JSON.stringify(someData),\r\n    CONFIG\r\n).then(\r\n    //Success Handler\r\n    function(response) {\r\n        console.log(response);\r\n    },\r\n    //Failure Handler\r\n    function(response) {\r\n        console.log(response);\r\n    }\r\n);","type":"js","displayName":"API - Angular API with Config - PUT","setWrapperDivNameOnInsert":false},{"code":"AngularJS/Modules/code-examples/01-http.js","type":"rel","displayName":"API - Angular API with Config - PUT","setWrapperDivNameOnInsert":false},{"code":"const CONFIG = {\r\n    headers: {\r\n        'gtmhub-application-name':'your-application-name'\r\n    },\r\n    params: {\r\n        'SomeQueryParameter': 'someValue'\r\n    }\r\n};\r\n\r\n$http.delete(BASE_URL + 'API_URL', CONFIG).then(\r\n    //Success Handler\r\n    function(response) {\r\n        console.log(response);\r\n    },\r\n    //Failure Handler\r\n    function(response) {\r\n        console.log(response);\r\n    }\r\n);","type":"js","displayName":"API - Angular API with Config - DELETE","setWrapperDivNameOnInsert":false},{"code":"AngularJS/Modules/code-examples/01-http.js","type":"rel","displayName":"API - Angular API with Config - DELETE","setWrapperDivNameOnInsert":false},{"code":"function getPagedApiResults(url, recordLimit, config) {\n    var deferred = $q.defer();\n    let fullResult = [];\n    config = config == null ? {} : config;\n    config.params = config.params == null ? {} : config.params;\n\n    //You may need to change \"take\" to \"limit\" for some API calls if you are getting unexpected results\n    config.params.take = recordLimit;\n    config.params.skip = 0;\n    \n    getResults();\n\n    function getResults() {\n        $http.get(url, config).then(\n            function(response) {\n                fullResult = fullResult.concat(response.data.items);\n                config.params.skip = config.params.skip + recordLimit;\n\n                if(response.data.totalCount < config.params.skip) {\n                    deferred.resolve({\n                        items: fullResult,\n                        totalCount: response.data.totalCount\n                    });\n                } else {\n                    deferred.notify({\n                        message: 'Retreived ' + config.params.skip + ' of ' + response.data.totalCount + ' records',\n                        totalRecords: response.data.totalCount,\n                        retrievedRecords: config.params.skip\n                    });\n                    getResults();\n                }\n            }, \n            function(response) {\n                deferred.reject(response); \n            }\n        );\n    }\n\n    return deferred.promise;\n}","type":"js","displayName":"API - Angular Getting Paged API Results - Function","setWrapperDivNameOnInsert":false},{"code":"AngularJS/Modules/code-examples/01-http.js\nAngularJS/Modules/code-examples/05-q.js","type":"rel","displayName":"API - Angular Getting Paged API Results - Function","setWrapperDivNameOnInsert":false},{"code":"getPagedApiResults(BASE_URL + 'api/v2/goals?fields=name', 10).then(\n    //Handle success\n    function(response) {\n        console.log(response)\n    },\n    //Handle failure\n    function(response) {\n        console.log(response);\n    },\n    //Optional notification handler\n    function(notification) {\n        console.log(notification);\n    }\n);","type":"js","displayName":"API - Angular Getting Paged API Results - Call","setWrapperDivNameOnInsert":false},{"code":"const CONFIG = {\n    headers: {\n        'gtmhub-application-name':'your-application-name'\n    },\n    params: {\n        fields: 'name,id,email'\n    }\n};\ngetPagedApiResults(BASE_URL + 'api/v2/users', 10, CONFIG).then(\n    //Handle success\n    function(response) {\n        console.log(response)\n    },\n    //Handle failure\n    function(response) {\n        console.log(response);\n    },\n    //Optional notification handler\n    function(notification) {\n        console.log(notification);\n    }\n);","type":"js","displayName":"API - Angular Getting Paged API Results - Call with Config","setWrapperDivNameOnInsert":false},{"code":"$http.get('API_URL').then(\n    //Success Handler\n    function(response) {\n        //Do something on success\n    },\n    //Failure Handler\n    function(response) {\n        console.log(response);\n        if(response != null && response.config != null && response.config.headers['transaction-id'] != null) {\n            alert('An error occurred. Transation ID: ' + response.config.headers['transaction-id']);\n        } else {\n            alert('An error occurred.');\n        }\n    }\n);","type":"js","displayName":"API - Angular Show Transaction ID in Failure","setWrapperDivNameOnInsert":false},{"code":"function generateTransactionId() {\n    return `${Math.random().toString().substring(2)}-${Math.random().toString().substring(2)}`\n}","type":"js","displayName":"API - Generate Transaction ID","setWrapperDivNameOnInsert":false},{"code":"const BASE_URL = window.location.hostname.replace(window.location.hostname.split('.').shift(),'https://app') + '/';","type":"js","displayName":"API - Get Base URL","setWrapperDivNameOnInsert":false},{"code":"$.get('API_URL').done(function(response) {\n    //Do something on success\n}).fail(function(response) {\n    //Do something on failure. Use response.responseText to get the failure message\n});","type":"js","displayName":"API - jQuery Ajax Call - Get Call","setWrapperDivNameOnInsert":false},{"code":"$.ajax({\n    method: 'POST',\n    url: 'API_URL',\n    contentType: 'application/json; charset=utf-8',\n    dataType: 'json',\n    data: JSON.stringify('someData')\n}).done(function(response) {\n    //Do something on success\n}).fail(function(response) {\n    //Do something on failure. Use response.responseText to get the failure message\n});","type":"js","displayName":"API - jQuery Ajax Call - Ajax Call","setWrapperDivNameOnInsert":false},{"code":"$.when(\n    $.get('API_URL_1'),\n    $.get('API_URL_2'),\n    $.get('API_URL_3')\n).done(function(call1Response, call2Response, call3Response) {\n    //Do something with the results\n}).fail(function(failedCallResponse) {\n    //Do something with the failure.\n});","type":"js","displayName":"API - jQuery Ajax Call - Multiple Calls","setWrapperDivNameOnInsert":false},{"code":"success: function(response) {\n    angularScope.someVariable = response.someResult;\n    angularScope.$apply();\n}","type":"js","displayName":"API - jQuery Ajax Call - Angular Data Model Changes","setWrapperDivNameOnInsert":false},{"code":"function getPagedApiResults(url, recordLimit) {\n    var deferred = $.Deferred();\n    let skipLevel = 0;\n    let fullResult = [];\n    let hasQueryString = url.indexOf('?') > -1;\n    getResults();\n\n    function getResults() {\n        $.get(url + (hasQueryString ? '&' : '?') + 'limit=' + recordLimit + '&skip=' + skipLevel).done(function(response) {\n            fullResult = fullResult.concat(response.items);\n            skipLevel = skipLevel + recordLimit;\n\n            if(response.totalCount < skipLevel) {\n                deferred.resolve({\n                    items: fullResult,\n                    totalCount: response.totalCount\n                });\n            } else {\n                getResults();\n            }\n        }).fail(function(response) {\n            deferred.reject(response); \n        });\n    }\n\n    return deferred;\n}","type":"js","displayName":"API - jQuery Getting Paged API Results - Get Function","setWrapperDivNameOnInsert":false},{"code":"getPagedApiResults(baseUrl + 'api/v2/tasks', 500).done(function(tasks) {\n    //Do something with tasks\n  }).fail(function(response) {\n    //Do something on failure\n  });","type":"js","displayName":"API - jQuery Getting Paged API Results - Calling Get Function","setWrapperDivNameOnInsert":false},{"code":"function getPagedApiResultsAjax(ajaxOptions, recordLimit) {\n    var deferred = $.Deferred();\n    let skipLevel = 0;\n    let fullResult = [];\n    let hasQueryString = ajaxOptions.url.indexOf('?') > -1;\n    let apiUrl = ajaxOptions.url;\n    getResults();\n\n    function getResults() {\n        ajaxOptions.url = apiUrl + (hasQueryString ? '&' : '?') + 'take=' + recordLimit + '&skip=' + skipLevel;\n        $.ajax(ajaxOptions).done(function(response) {\n            fullResult = fullResult.concat(response.items);\n            skipLevel = skipLevel + recordLimit;\n\n            if(response.totalCount < skipLevel) {\n                deferred.resolve({\n                    items: fullResult,\n                    totalCount: response.totalCount\n                });\n            } else {\n                getResults();\n            }\n        }).fail(function(response) {\n            deferred.reject(response); \n        });\n    }\n\n    return deferred;\n}","type":"js","displayName":"API - jQuery Getting Paged API Results - Ajax Function","setWrapperDivNameOnInsert":false},{"code":"getPagedApiResultsAjax({\n    method: 'GET',\n    url: angularScope.destinationBaseUrl + 'api/v1/dashboards?fields=name,id',\n    contentType: 'application/json; charset=utf-8',\n    dataType: 'json',\n    headers: {\n            'gtmhub-accountId': angularScope.destinationAccountId,\n            'authorization': 'Bearer ' + angularScope.destinationApiToken\n    }                    \n}, 100).done(function(response) {\n    //Do something with the results\n}).fail(function(response) {\n    //Do someting on failure\n});","type":"js","displayName":"API - jQuery Getting Paged API Results - Calling Ajax Function","setWrapperDivNameOnInsert":false},{"code":"<assignee id=\"{{data.id}}\"></assignee>","type":"html","displayName":"Components - Assignee Component - Single Owner","setWrapperDivNameOnInsert":false},{"code":"<assignee ng-repeat=\"owner in objective.ownerids\" id=\"{{owner}}\"></assignee>","type":"html","displayName":"Components - Assignee Component - Multiple Owners","setWrapperDivNameOnInsert":false},{"code":"<a href=\"#/users/{{user.user_id}}/user-details/\" target=\"_blank\">\n    <assignee id=\"{{user.user_id}}\"></assignee>\n</a>","type":"html","displayName":"Components - Assignee Component - With a Link (User Roles Edit)","setWrapperDivNameOnInsert":false},{"code":"<a href=\"#/employees/{{user.user_id}}/employee-details/\" target=\"_blank\">\n    <assignee id=\"{{user.user_id}}\"></assignee>\n</a>","type":"html","displayName":"Components - Assignee Component - With a Link (Employee Profile)","setWrapperDivNameOnInsert":false},{"code":"<attainment value=\"{{kr.progress}}\"></attainment>","type":"html","displayName":"Components - Attainment Component - Bar Only","setWrapperDivNameOnInsert":false},{"code":"<attainment value=\"{{kr.progress}}\"></attainment><span>{{kr.progress | number : 1}}%</span>","type":"html","displayName":"Components - Attainment Component - Bar With Value After","setWrapperDivNameOnInsert":false},{"code":"<avatars size=\"s-20\" ids=\"data.ownerids\" preview-number=\"3\"></avatars>","type":"html","displayName":"Components - Avatar Component","setWrapperDivNameOnInsert":false},{"code":"<editable-textarea class=\"visible\" markdown=\"true\" mentions=\"true\" ng-model=\"newComment\"></editable-textarea>","type":"html","displayName":"Components - Editable - Textarea","setWrapperDivNameOnInsert":false},{"code":"<mentioning text=\"{{comment.text}}\"></mentioning>","type":"html","displayName":"Components - Editable - Mentioning","setWrapperDivNameOnInsert":false},{"code":"<div marked=\"data.rawcomment\"></div>","type":"html","displayName":"Components - Markdown Directive","setWrapperDivNameOnInsert":false},{"code":"<metric field-name=\"sql_name\" name=\"Name for created KR/KPI\">\n    {{ data.sql_name | number : 2 }}\n</metric>","type":"html","displayName":"Components - Metric Compnent","setWrapperDivNameOnInsert":false},{"code":"<div ng-show=\"data && data.default.length === 0\">\n    <no-insight-data></no-insight-data>\n</div>","type":"html","displayName":"Components - Nothing Found Component - Generic","setWrapperDivNameOnInsert":false},{"code":"<no-insight-data title=\"Title_Text\" subtext=\"text_under_title\"></no-insight-data>","type":"html","displayName":"Components - Nothing Found Component - Custom","setWrapperDivNameOnInsert":false},{"code":"<gtmhub-bar size=\"{{data.done_goals}}\" count=\"{{data.goal_count}}\"></gtmhub-bar>","type":"html","displayName":"Components - Progress Bar - Default Coloring","setWrapperDivNameOnInsert":false},{"code":"#wrapperDiv .good .gtmhub-bar-holder .gtmhub-bar .progress {\n    background: green;\n}\n\n#wrapperDiv .ok .gtmhub-bar-holder .gtmhub-bar .progress {\n    background: yellow;\n}\n\n#wrapperDiv .bad .gtmhub-bar-holder .gtmhub-bar .progress {\n    background: red;\n}","type":"css","displayName":"Components - Progress Bar - Custom Coloring","setWrapperDivNameOnInsert":false},{"code":"<gtmhub-bar ng-class=\"data.goals_done_pct > 0.5 ? 'good' : data.goals_done_pct > 0.25 ? 'ok' : 'bad'\" size=\"{{data.done_goals}}\" count=\"{{data.goal_count}}\"></gtmhub-bar>","type":"html","displayName":"Components - Progress Bar - Custom Coloring","setWrapperDivNameOnInsert":false},{"code":"<viewobjectivelist title=\"List Title\" objectives=\"data.default\"></viewobjectivelist>","type":"html","displayName":"Components - View Objective List Component","setWrapperDivNameOnInsert":false},{"code":"angularData.exportToCSV = function() {\n\tlet csv = 'data:text/csv;charset=utf-8,';\n\tcsv += '\"Task\",\"Assignee\",\"Status\",\"Latest Comment\"\\r\\n'\n\tfor(const row of someArray) {\n\t\tlet rowCsv = [\n\t\t\trow.task_name, \n\t\t\trow.assignee_name, \n\t\t\trow.status,\n\t\t\trow.latestComment\n\t\t]\n\t\tcsv += '\"' + rowCsv.join('\",\"') + '\"\\r\\n';\n\t}\n\n    //Generate a download link and click it\n\tvar encodedUri = encodeURI(csv);\n\tvar link = document.createElement(\"a\");\n\tlink.setAttribute(\"href\", encodedUri);\n\tlink.setAttribute(\"download\", \"export.csv\");\n\tdocument.body.appendChild(link);\n\tlink.click();\n\tlink.remove();\n}","type":"js","displayName":"Data Exports - Download CSV","setWrapperDivNameOnInsert":false},{"code":"<div>{{ data.number | currency : \"€\" }}</div>","type":"html","displayName":"Formatting - Currency Formatting - Change Currency","setWrapperDivNameOnInsert":false},{"code":"<div>{{ data.number | currency : 3}}</div>","type":"html","displayName":"Formatting - Currency Formatting - Decimal","setWrapperDivNameOnInsert":false},{"code":"<div>{{ data.number | currency }}</div>","type":"html","displayName":"Formatting - Currency Formatting - Default","setWrapperDivNameOnInsert":false},{"code":"<div> {{date.datecreated | date}} </div>","type":"html","displayName":"Formatting - Date Formatting - Default","setWrapperDivNameOnInsert":false},{"code":"<div> {{date.datecreated | date : <format> }} </div>","type":"html","displayName":"Formatting - Date Formatting - With Formatting","setWrapperDivNameOnInsert":false},{"code":"{{ data.message || 'N/A'}}","type":"html","displayName":"Formatting - If Null Display This","setWrapperDivNameOnInsert":false},{"code":"<div> {{date.field_name | number}} </div>","type":"html","displayName":"Formatting - Number Formatting - Default","setWrapperDivNameOnInsert":false},{"code":"<div> {{date.field_name | number : 2}} </div>","type":"html","displayName":"Formatting - Number Formatting - Specify Decimal","setWrapperDivNameOnInsert":false},{"code":"var chart = new google.visualization.BarChart(document.getElementById('targetDiv'));\nchart.draw(data, options);\n$(window).resize(function() {\n    if (chart1 == \"done\") {\n        chart1 = \"waiting\";\n        setTimeout(function() {\n            drawChart();\n            chart1 = \"done\"\n        }, 1000);\n    }\n});","type":"js","displayName":"Google Visualization - Chart Resize","setWrapperDivNameOnInsert":false},{"code":"var myChart = new google.visualization.ComboChart(document.getElementById(\"targetDiv\"));\n\ngoogle.visualization.events.addListener(myChart, \"ready\", function () {\n    document.getElementById(\"<your-div>\").outerHTML = \"<a download='image.png' href='\" + myChart.getImageURI() + \"'>Download Image</a>\";\n});\n\nmyChart.draw(data, options);","type":"js","displayName":"Google Visualization - Download Chart Image","setWrapperDivNameOnInsert":false},{"code":"#wrapperDiv .chartContainer {\n    height: 120px; /* Should be 1/2 the gauge height + 20px */\n    overflow: hidden;\n    position: relative;\n}\n\n#wrapperDiv .vertical-centered-flex {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#wrapperDiv .gaugeValue {\n    position: absolute;\n    width: 100%;\n    top: 75px;\n    text-align: center;\n    font-size: 30px;\n    font-weight: 300;\n    z-index: 1;\n}","type":"css","displayName":"Google Visualization - Standard Gauge Chart - Standard Gauge","setWrapperDivNameOnInsert":false},{"code":"<div id=\"wrapperDiv\">\n    <div class=\"vertical-centered-flex\" ng-show=\"data.<property> != undefined\">\n        <div class=\"bigger-120 medium\">Objectives Over 50% Attainment</div>\n        <div class=\"chartContainer\">\n            <div class=\"gaugeValue\">\n                <metric field-name=\"<property>\">{{data.<property> | number : 0}}%</metric>\n            </div>\n            <div id=\"wrapperDivGaugeContainer\"></div>\n        </div>\n    </div>\n    <div ng-show=\"data.<property> === undefined\">\n        <no-insight-data></no-insight-data>\n    </div>\n</div>","type":"html","displayName":"Google Visualization - Standard Gauge Chart - Standard Gauge","setWrapperDivNameOnInsert":false},{"code":"var angularData = angular.element($(\"#overFiftyPercentAttainment\")).scope();\ndrawGauge('overFiftyPercentAttainmentGaugeContainer', 'Objectives Over 50% Attainment', angularData.data.pct_over_50_pct, 100, 'green');","type":"js","displayName":"Google Visualization - Standard Gauge Chart - Standard Gauge Calling Function","setWrapperDivNameOnInsert":false},{"code":"// Defaults:\n// maxValue = 100\n// color = Gtmhub green\n// height = 200 (in pixels)\n// width = 200 (in pixels)\n// thickness = 0.2 (20% of a full circle)\nfunction drawGauge(targetDivName, gaugeTitle, gaugeValue, maxValue, color, height, width, thickness) {\n    //Check target div\n    let targetDiv = document.getElementById(targetDivName)\n    if(targetDiv == null) {\n        console.error('Target div for the gauge is not valid');\n        return\n    }\n\n    maxValue = maxValue == null ? 100 : maxValue;\n    height = height == null ? 200 : height;\n    width = width == null ? 200 : width;\n    thickness = thickness == null ? 0.2 : thickness;\n    color = color == null ? '#2BD6A5' : color;\n\n    //Make sure the gague value is a number\n    let displayValue = 0;\n    if(typeof(gaugeValue) === 'number') {\n        displayValue = gaugeValue;\n    } else if(gaugeValue == null) {\n        displayValue = 0;\n    } else {\n        try {\n            displayValue = parseFloat(gaugeValue);\n        } catch {\n            console.error('Invalid gauge value');\n            return;\n        }\n    }\n\n    //Make sure our data fits within our window\n    displayValue = displayValue < 0 ? 0 : displayValue > maxValue ? maxValue : displayValue;\n\n    let chartData = [\n        [gaugeTitle, 'Full Amount'],\n        [gaugeTitle, displayValue],\n        ['', maxValue - displayValue],\n        ['', maxValue]\n    ];\n\n    var data = google.visualization.arrayToDataTable(chartData);\n\n    var options = {\n        chartArea:{left: 0, bottom: 0, top: 20, width:\"100%\", height: \"100%\"},\n        width: width,\n        height: height,\n        pieHole: 1 - thickness,\n        pieStartAngle: 270,\n        pieSliceText: 'none',\n        tooltip: {text: 'value'},\n        legend: 'none',\n        slices: {  \n            0: {color: color},\n            1: {color: '#E8EDF2'},\n            2: {color: 'none'}\n        },\n    };\n\n    var chart = new google.visualization.PieChart(targetDiv);\n    chart.draw(data, options);\n}","type":"js","displayName":"Google Visualization - Standard Gauge Chart - Standard Gauge Draw Function","setWrapperDivNameOnInsert":false},{"code":"myArray.sort();","type":"js","displayName":"Javascript - Array Sorting - Simple Sort","setWrapperDivNameOnInsert":false},{"code":"myArray.sort(function(a,b) {\n    return a - b;\n});","type":"js","displayName":"Javascript - Array Sorting - Numeric Sort","setWrapperDivNameOnInsert":false},{"code":"myArray.sort(function(a,b) {\n    return a.name.localeCompare(b.name, undefined, {sensitivity: 'base'});\n});","type":"js","displayName":"Javascript - Array Sorting - Sort On String Property","setWrapperDivNameOnInsert":false},{"code":"for (const prop in someObject) {\n    elements[prop].isAwesome = true; \n}","type":"js","displayName":"Javascript - For In Loop - Simple Object","setWrapperDivNameOnInsert":false},{"code":"for (const prop in someObject) {\n    if (Object.hasOwn(someObject, prop)) {\n        someObject[prop].isAwesome = true;\n    }\n}","type":"js","displayName":"Javascript - For In Loop - Complex Object","setWrapperDivNameOnInsert":false},{"code":"for(const arrayElement of someArray) {\n    arrayElement.isAwesome = true;\n}","type":"js","displayName":"Javascript - For Of Loop","setWrapperDivNameOnInsert":false},{"code":"someArray.forEach((someElement) => {\n    someElement.isAwesome = true;\n});","type":"js","displayName":"Javascript - forEach Function","setWrapperDivNameOnInsert":false},{"code":"#wrapperDiv {\r\n    white-space: pre-line;\r\n}","type":"css","displayName":"Javascript - Newlines","setWrapperDivNameOnInsert":false},{"code":"<script>\r\n(function() {\r\n    \r\n})();\r\n</script>","type":"js","displayName":"Javascript - Script Tag with IIFE","setWrapperDivNameOnInsert":false},{"code":"for(let i = 0; i < someArray.length; i++) {\n    someArray[i].property = true;\n}\n","type":"js","displayName":"Javascript - Standard For Loop","setWrapperDivNameOnInsert":false},{"code":"requirejs(['plotly'], function (Plotly) {\n    // We set timeout so the markup has enough time to initialize\n    setTimeout(function () {\n        let trace1 = {\n            x: xdata, // Change xdata to appropriate data-->\n            y: ydata, // Change ydata to appropriate data-->\n            type: 'bar'\n        };\n        let plotData = [trace1];\n        var layout = {\n            title: 'Example Bar Chart',\n            xaxis: {\n                title: 'x-axis'\n            },\n            yaxis: {\n                title: 'y-axis'\n            }\n        };\n\n        Plotly.newPlot('plotly-container', plotData, layout); // Change 'plotly-container' to match div id\n    }, 10)\n});\n","type":"js","displayName":"Plotly - Bar Chart","setWrapperDivNameOnInsert":false},{"code":"requirejs(['plotly'], function (Plotly) {\n    setTimeout(function () {\n\n        let trace1 = {\n            x: xdataBar, // Change xdataBar to appropriate data\n            y: ydataBar, // Change ydataBar to appropriate data\n            marker: { color: 'rgb(164, 194, 244)' },\n            type: 'bar',\n            name: 'Bar Title'\n        };\n        let trace2 = {\n            x: xdataLine, // Change xdataLine to appropriate data\n            y: ydataLine, // Change ydataLine to appropriate data\n            line: { color: 'rgb(142, 124, 195)' },\n            type: 'scatter',\n            name: 'Line Title'\n        };\n\n\n        let data = [trace1, trace2];\n        // To add more plates create more traces and add to data array\n        let layout = {\n            title: 'Chart Title',\n            xaxis: {\n                title: 'x-axis',\n                showgrid: false,\n                zeroline: false\n            },\n            yaxis: {\n                title: 'y-axis',\n                showline: true\n            }\n        };\n        Plotly.newPlot('plotly-container', data, layout);  // Change 'plotly-container' to match div id\n    }, 10)\n});","type":"js","displayName":"Plotly - Dual Plot Line Chart","setWrapperDivNameOnInsert":false},{"code":"requirejs(['plotly'], function (Plotly) {\n    // We set timeout so the markup has enough time to initialize\n    setTimeout(function () {\n        let trace1 = {\n            x: xdata, // change xdata to appropriate data\n            y: ydata, // change ydata to appropriate data\n            type: 'scatter'\n        };\n        let plotData = [trace1];\n        var layout = {\n            title: 'Example Line Chart',\n            xaxis: {\n                title: 'x-axis',\n                showgrid: false,\n                zeroline: false\n            },\n            yaxis: {\n                title: 'y-axis',\n                showline: true\n            }\n        };\n\n        Plotly.newPlot('plotly-container', plotData, layout); // plotly-container - must match div id\n    }, 10)\n});","type":"js","displayName":"Plotly - Line Chart","setWrapperDivNameOnInsert":false},{"code":"SELECT STRING_AGG(t.someField, 'separator') AS desired_field_name","type":"sql","displayName":"SQL - Aggregations - String Aggregation","setWrapperDivNameOnInsert":false},{"code":"JSON_AGG(\r\n    JSON_BUILD_OBJECT(\r\n        'prop1', r.sqlCol1,\r\n        'prop2', r.sqlCol2\r\n    )\r\n)::text AS json_result","type":"sql","displayName":"SQL - Aggregations - JSON Aggregation","setWrapperDivNameOnInsert":false},{"code":"CASE WHEN table_alias.customfields <> '' \r\n    THEN (table_alias.customfields::json ->> 'custom_field_sys_name')\r\n    ELSE '' \r\nEND AS chosen_name","type":"sql","displayName":"SQL - Custom Fields - Get Custom Field Value","setWrapperDivNameOnInsert":false},{"code":"CASE WHEN '%%insightboard_parameter_key%%' <> ''\r\n    THEN CASE WHEN table_alias.customfields <> '' \r\n            THEN (table_alias.customfields::json ->> 'custom_field_key')\r\n            ELSE '' \r\n        END = ANY(string_to_array('%%insightboard_parameter_key%%', ','))\r\n    ELSE true\r\nEND","type":"sql","displayName":"SQL - Custom Fields - Filter on Custom Field Value","setWrapperDivNameOnInsert":false},{"code":"FILTER (WHERE something1 > something2)","type":"sql","displayName":"SQL - Filter Clause - Filter Clause","setWrapperDivNameOnInsert":false},{"code":"SELECT COUNT(1) AS resolved_epics,\r\n    COUNT(1) FILTER (WHERE ji.resolutiondate > ji.duedate) AS overdue_isues,\r\n    COUNT(1) FILTER (WHERE ji.resolutiondate > ji.duedate) / (COUNT(1)::numeric) AS percent_overdue\r\nFROM jira_issues ji","type":"sql","displayName":"SQL - Filter Clause - Full Example","setWrapperDivNameOnInsert":false},{"code":"CASE WHEN '%%param_name%%' <> '' \r\n  THEN field_name = '%%param_name%%'\r\n  ELSE true \r\nEND","type":"sql","displayName":"SQL - Insightboard Parameter Filters - List","setWrapperDivNameOnInsert":false},{"code":"CASE WHEN '%%param_name%%' <> ''\r\n    THEN field_name = ANY(string_to_array('%%param_name%%', ','))\r\n    ELSE true\r\nEND ","type":"sql","displayName":"SQL - Insightboard Parameter Filters - Multi-List","setWrapperDivNameOnInsert":false},{"code":"CASE WHEN '%%param_name%%' <> ''\r\n    THEN g.ownerids::text[] && string_to_array('%%param_name%%', ',')\r\n    ELSE true\r\nEND","type":"sql","displayName":"SQL - Insightboard Parameter Filters - Multi-List to Array","setWrapperDivNameOnInsert":false},{"code":"CASE WHEN '%%param_name%%' <> '' \r\n  THEN TO_DATE(SUBSTRING('%%param_name%%',1,10), 'YYYY-MM-DD') > field_name\r\n  ELSE true \r\nEND","type":"sql","displayName":"SQL - Insightboard Parameter Filters - Single Date","setWrapperDivNameOnInsert":false},{"code":"gtmhub.DURING('some_date_field', '%%date_range%%')","type":"sql","displayName":"SQL - Insightboard Parameter Filters - Date Range","setWrapperDivNameOnInsert":false},{"code":"CASE WHEN '%%session%%' <> ''\r\n    THEN g.sessionid = ANY(string_to_array('%%session%%', ','))\r\n    ELSE true\r\nEND","type":"sql","displayName":"SQL - Insightboard Parameter Filters - Session","setWrapperDivNameOnInsert":false},{"code":"CASE WHEN '%%teams_and_people%%' <> ''\r\n    THEN g.ownerids::text[] && string_to_array('%%teams_and_people%%', ',')\r\n    ELSE true\r\nEND","type":"sql","displayName":"SQL - Insightboard Parameter Filters - Teams and People","setWrapperDivNameOnInsert":false},{"code":"CASE \r\n    WHEN '%%tags%%' <> ''\r\n    THEN EXISTS(\r\n        SELECT 1\r\n        FROM gtmhubgoaltags gt\r\n        WHERE gt.goal_id = g.id\r\n            AND gt.name = ANY(string_to_array('%%tags%%', ','))\r\n    )\r\n    ELSE true \r\nEND ","type":"sql","displayName":"SQL - Insightboard Parameter Filters - Objective Tags","setWrapperDivNameOnInsert":false},{"code":"(\r\n    SELECT DISTINCT ON(ms.metricid) ms.metricid,\r\n        ms.confidence,\r\n        ms.comment\r\n    FROM gtmhubmetricsnapshots ms\r\n    ORDER BY ms.metricid, ms.createdat DESC\r\n) ms","type":"sql","displayName":"SQL - Newest Metric Snapshot","setWrapperDivNameOnInsert":false},{"code":"DATE_TRUNC('day', ji.resolutiondate)","type":"sql","displayName":"SQL - Working with Dates - Truncating Timestamps","setWrapperDivNameOnInsert":false},{"code":"SELECT COUNT(1) AS resolved_epics,\r\n    COUNT(1) FILTER (WHERE DATE_TRUNC('day', ji.resolutiondate) > ji.duedate) AS overdue_epics,\r\n    (COUNT(1) FILTER (WHERE DATE_TRUNC('day', ji.resolutiondate) > ji.duedate)::numeric / COUNT(1)) * 100 AS percent_overdue\r\nFROM jira_issues ji","type":"sql","displayName":"SQL - Working with Dates - Comparison with Truncating","setWrapperDivNameOnInsert":false},{"code":"SELECT date '2014-01-01' + interval '1' month * s.a AS date\r\nFROM generate_series(0,1000,1) AS s(a)","type":"sql","displayName":"SQL - Working with Dates - Generate Series","setWrapperDivNameOnInsert":false},{"code":"g.customfields::json ->> 'obj_priority'","type":"sql","displayName":"SQL - Working with JSON - Get Object Property","setWrapperDivNameOnInsert":false},{"code":"arr::json ->> 1 AS second_array_element","type":"sql","displayName":"SQL - Working with JSON - Get Array Element","setWrapperDivNameOnInsert":false},{"code":"my_json::json #>> '{a, a2}' AS a2_in_a\r\n","type":"sql","displayName":"SQL - Working with JSON - Get Nested Element","setWrapperDivNameOnInsert":false},{"code":"<a ui-sref=\"._singleGoal.goal._metric.metric({id: okr.objective_id, metricId: okr.kr_id})\">{{okr.kr_name}}</a>","type":"html","displayName":"Standard Displays - Key Result - Simple Link","setWrapperDivNameOnInsert":false},{"code":"<img src=\"/dist/img/icons/kr.svg\">","type":"html","displayName":"Standard Displays - Key Result - Icon","setWrapperDivNameOnInsert":false},{"code":"<img src=\"/dist/img/icons/kr.svg\"/><a ui-sref=\"._singleGoal.goal._metric.metric({id: okr.objective_id, metricId: okr.kr_id})\">{{okr.kr_name}}</a>","type":"html","displayName":"Standard Displays - Key Result - Link with Icon","setWrapperDivNameOnInsert":false},{"code":"<td class=\"iconColumn\"><img src=\"/dist/img/icons/kr.svg\"/></td>\n<td><a ui-sref=\"._singleGoal.goal._metric.metric({id: okr.objective_id, metricId: okr.kr_id})\">{{okr.kr_name}}</a></td>","type":"html","displayName":"Standard Displays - Key Result - Link in Table (Two Columns)","setWrapperDivNameOnInsert":false},{"code":"<a ui-sref=\"._singleGoal.goal({id: okr.objective_id})\">{{ okr.objective_name }}</a>","type":"html","displayName":"Standard Displays - Objective - Simple Link","setWrapperDivNameOnInsert":false},{"code":"<img src=\"/dist/img/icons/objective.svg\">","type":"html","displayName":"Standard Displays - Objective - Icon","setWrapperDivNameOnInsert":false},{"code":"<img src=\"/dist/img/icons/objective.svg\"/><a ui-sref=\"._singleGoal.goal({id: okr.objective_id})\">{{ okr.objective_name }}</a>","type":"html","displayName":"Standard Displays - Objective - Link with Icon","setWrapperDivNameOnInsert":false},{"code":"<td class=\"iconColumn\"><img src=\"/dist/img/icons/objective.svg\"/></td>\n<td><a ui-sref=\"._singleGoal.goal({id: okr.objective_id})\">{{ okr.objective_name }}</a></td>","type":"html","displayName":"Standard Displays - Objective - Link in Table (Two Columns)","setWrapperDivNameOnInsert":false},{"code":"<a ng-show=\"task.objective_id || task.kr_id\" ui-sref=\"._task.task({taskId: task.task_id})\">{{task.taskname}}</a>","type":"html","displayName":"Standard Displays - Tasks - Link","setWrapperDivNameOnInsert":false},{"code":"<img src=\"/dist/img/icons/task.svg\">","type":"html","displayName":"Standard Displays - Tasks - Icon","setWrapperDivNameOnInsert":false},{"code":"<div class=\"gh-b gh-prime\" ui-sref=\"._task.task\">Create new task</div>","type":"html","displayName":"Standard Displays - Tasks - Create a Task","setWrapperDivNameOnInsert":false},{"code":"<button gh-button class=\"small secondary\">Button Text</button>","type":"html","displayName":"Standard HTML - Buttons - Standard Small","setWrapperDivNameOnInsert":false},{"code":"<button gh-button class=\"large secondary\">Button Text</button>","type":"html","displayName":"Standard HTML - Buttons - Standard Large","setWrapperDivNameOnInsert":false},{"code":"<button gh-button class=\"small primary\">Button Text</button>","type":"html","displayName":"Standard HTML - Buttons - Accent Small","setWrapperDivNameOnInsert":false},{"code":"<button gh-button class=\"large primary\">Button Text</button>","type":"html","displayName":"Standard HTML - Buttons - Accent Large","setWrapperDivNameOnInsert":false},{"code":"<button gh-button class=\"small destructive\">Button Text</button>","type":"html","displayName":"Standard HTML - Buttons - Destructive Small","setWrapperDivNameOnInsert":false},{"code":"<button gh-button class=\"large destructive\">Button Text</button>","type":"html","displayName":"Standard HTML - Buttons - Destructive Large","setWrapperDivNameOnInsert":false},{"code":"<input class=\"gh-checkbox-v2\" type=\"checkbox\" ng-model=\"someProperty\">","type":"html","displayName":"Standard HTML - Checkbox","setWrapperDivNameOnInsert":false},{"code":"#wrapperDiv .insight-description-text {\n    font-size: 13px;\n    color: #445573;\n}","type":"css","displayName":"Standard HTML - Description Text - CSS","setWrapperDivNameOnInsert":false},{"code":"<div class=\"insight-description-text\">Description Text</div>","type":"html","displayName":"Standard HTML - Description Text - HTML","setWrapperDivNameOnInsert":false},{"code":"<img src=\"/dist/img/icons/session.svg\">","type":"html","displayName":"Standard HTML - Icons - Session","setWrapperDivNameOnInsert":false},{"code":"<img src=\"/dist/img/icons/objective.svg\">","type":"html","displayName":"Standard HTML - Icons - Objective","setWrapperDivNameOnInsert":false},{"code":"<img src=\"/dist/img/icons/kr.svg\">","type":"html","displayName":"Standard HTML - Icons - Key Result","setWrapperDivNameOnInsert":false},{"code":"<img src=\"/dist/img/icons/task.svg\">","type":"html","displayName":"Standard HTML - Icons - Task","setWrapperDivNameOnInsert":false},{"code":"<img src=\"/dist/img/icons/user.svg\">","type":"html","displayName":"Standard HTML - Icons - User","setWrapperDivNameOnInsert":false},{"code":"<img src=\"/dist/img/icons/team.svg\">","type":"html","displayName":"Standard HTML - Icons - Team","setWrapperDivNameOnInsert":false},{"code":"<img src=\"/dist/img/icons/kpi.svg\">","type":"html","displayName":"Standard HTML - Icons - KPI","setWrapperDivNameOnInsert":false},{"code":"<img src=\"/dist/img/logos/jira.png\">","type":"html","displayName":"Standard HTML - Icons - Data Source","setWrapperDivNameOnInsert":false},{"code":"<img alt=\"Objective Icon\" src=\"/dist/img/icons/objective.svg\" />","type":"html","displayName":"Standard HTML - Images - Simple Image","setWrapperDivNameOnInsert":false},{"code":"<img alt=\"Corporate Logo\" src=\"data:image/png;base64,<base 64 encoded data>\">","type":"html","displayName":"Standard HTML - Images - Base64 Encoded Image","setWrapperDivNameOnInsert":false},{"code":"<input class=\"gh-input-text-v2\" placeholder=\"Search by name/e-mail\" ng-model=\"searchText\">","type":"html","displayName":"Standard HTML - Input","setWrapperDivNameOnInsert":false},{"code":"<div class=\"mk-spinner-pie\"></div>","type":"html","displayName":"Standard HTML - Loading Spinner - HTML","setWrapperDivNameOnInsert":false},{"code":"#wrapperDiv .mk-spinner-pie {\r\n    position: relative;\r\n    margin-top: 0;\r\n    margin-left: 0;\r\n}","type":"css","displayName":"Standard HTML - Loading Spinner - CSS for Relative Position","setWrapperDivNameOnInsert":false},{"code":"<select class=\"gh-select-v2\" ng-model=\"selectedValue\">\r\n    <option value=\"1\">A</option>\r\n    <option value=\"2\">B</option>\r\n    <option value=\"3\">C</option>\r\n</select>","type":"html","displayName":"Standard HTML - Select - Hard Coded Options","setWrapperDivNameOnInsert":false},{"code":"<select class=\"gh-select-v2\" ng-options=\"option.name for option in options\" ng-model=\"selectedValue\"></select>","type":"html","displayName":"Standard HTML - Select - Angular Defined Options","setWrapperDivNameOnInsert":false},{"code":"angularData.options = [\r\n    { name: \"Option 1\", id: \"1\" },\r\n    { name: \"Option 2\", id: \"2\" },\r\n    { name: \"Option 3\", id: \"3\" }\r\n];","type":"js","displayName":"Standard HTML - Select - Defining Angular Options","setWrapperDivNameOnInsert":false},{"code":"<input class=\"gh-input-text-v2\" placeholder=\"\" ng-model=\"searchText\">","type":"html","displayName":"Standard HTML - Text Area","setWrapperDivNameOnInsert":false},{"code":"#wrapperDiv .insight-title {\n    font-weight: bold;\n    font-size: 20px;\n    letter-spacing: 0.005em;\n    color: #021421;\n}","type":"css","displayName":"Standard HTML - Title Text - CSS","setWrapperDivNameOnInsert":false},{"code":"<div class=\"insight-title\">Title Text</div>","type":"html","displayName":"Standard HTML - Title Text - HTML","setWrapperDivNameOnInsert":false},{"code":"#global-search {\n    display: none;\n}","type":"css","displayName":"Style - Insightboard Styling - Remove Global Search","setWrapperDivNameOnInsert":false},{"code":".widget-template, body {\n    background: white;\n}","type":"css","displayName":"Style - Insightboard Styling - Background Widget Color","setWrapperDivNameOnInsert":false},{"code":".widget {\n    box-shadow: none;\n    height: auto !important;\n}","type":"css","displayName":"Style - Insightboard Styling - Remove Box Shadow","setWrapperDivNameOnInsert":false},{"code":".insight-service {\n    display: none;\n}","type":"css","displayName":"Style - Insightboard Styling - Remove Filter & Sync Bar","setWrapperDivNameOnInsert":false},{"code":".widget-template::-webkit-scrollbar {\n    display: none;\n}","type":"css","displayName":"Style - Insightboard Styling - Remove Scrollbar","setWrapperDivNameOnInsert":false},{"code":"insight-table table-items=\"arrayVariable\" items-per-page=\"15\" mode=\"inview\"","type":"html","displayName":"Tables - Insight Table Directive - Insight Table Directive","setWrapperDivNameOnInsert":false},{"code":"| limitTo : $limit : $skip","type":"html","displayName":"Tables - Insight Table Directive - limitTo","setWrapperDivNameOnInsert":false},{"code":"#tableWrapperDiv tbody {\n    display: block;\n    max-height: 600px;\n    overflow-y: scroll;\n    overflow-x: hidden;\n    width: 100%;\n}\n\n#tableWrapperDiv thead {\n    display: table; /* to take the same width as tr */\n    width: calc(100% - 17px); /* - 17px because of the scrollbar width */\n}\n\n#tableWrapperDiv tr {\n    display: table; /* display purpose; th's border */\n    width: 100%;\n    box-sizing: border-box; \n}\n\n#tableWrapperDiv .column1 {\n    width: 50%;\n}\n\n#tableWrapperDiv .column2 {\n    width: 25%;\n}\n    \n#tableWrapperDiv .column3 {\n    width: 25%;\n}\n","type":"css","displayName":"Tables - Scrolling Table Body - CSS","setWrapperDivNameOnInsert":false},{"code":"<div id=\"tableWrapperDiv\">\n    <table class=\"table mt-2\">\n        <thead>\n            <tr>\n                <th class=\"column1\" ng-click=\"orderKey = 'name'; reverse = !reverse;\">Name</th>\n                <th class=\"column2\" ng-click=\"orderKey = 'id'; reverse = !reverse;\">ID</th>\n                <th class=\"column3\">Export</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"goal in data.default | orderBy : orderKey : reverse\">\n                <td class=\"column1\">\n                    {{ goal.name }}\n                </td>\n                <td class=\"column2\">\n                    {{ goal.id }}\n                </td>\n                <td class=\"column3\">\n                    {{ goal.assigne_name }}\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>","type":"html","displayName":"Tables - Scrolling Table Body - HTML","setWrapperDivNameOnInsert":false},{"code":"#wrapperDiv tr:nth-child(1) th {\n    background: white;\n    font-weight: 500 !important;\n    color: #617294;\n    font-size: 14px !important;\n    border-bottom: 1px solid #eee !important;\n    position: sticky;\n    top: 0px;\n    z-index: 1;\n}","type":"css","displayName":"Tables - Table Styling - Table Headers","setWrapperDivNameOnInsert":false},{"code":"#insightboard .widget #wrapperDiv  .table tr:hover td {\n    background: inherit !important;\n}","type":"css","displayName":"Tables - Table Styling - No Hover Highlights","setWrapperDivNameOnInsert":false},{"code":"#wrapperDiv .insightHeader {\n    overflow: hidden;\n    background: white !important;\n    position: sticky;\n    width: 100%;\n    top: -30px; /* This value may need to be adjusted based on the height of your header */\n    z-index: 30;\n} \n\n#wrapperDiv tr:nth-child(1) th{\n    background: white;\n    box-shadow: 0 2px 1px -1px rgba(0, 0, 0, 0.4);\n    position: sticky;\n    top: 20px;  /* This value may need to be adjusted based on the height of your header */\n    z-index: 10;\n}","type":"css","displayName":"Tables - Table Styling - Insight With Sticky Header CSS","setWrapperDivNameOnInsert":false},{"code":"<table class=\"table mt-2\">\n    <tr>\n        <th ng-click=\"orderKey = 'a'; reverse = !reverse;\">Header</th>\n        <th ng-click=\"orderKey = 'b'; reverse = !reverse;\">Header</th>\n        <th ng-click=\"orderKey = 'c'; reverse = !reverse;\">Header</th>\n    </tr>\n    <tr ng-repeat=\"thing in data.default | orderBy : orderKey : reverse\">\n        <td>{{thing.a}}</td>\n        <td>{{thing.b}}</td>\n        <td>{{thing.c}}</td>\n    </tr>\n</table>","type":"html","displayName":"Tables - Table With Sorting Headers","setWrapperDivNameOnInsert":false},{"code":"#tableContainer {\n    height: 300px; \n    overflow-y: auto; \n    overflow-x: hidden;\n}\n\n#tableContainer tr:nth-child(1) th {\n    background: white;\n    font-weight: bold !important;\n    box-shadow: 0 2px 1px -1px rgba(0, 0, 0, 0.4);\n    position: sticky;\n    top: 0px;\n    z-index: 1;\n}","type":"css","displayName":"Tables - Table With Sticky Headers - CSS","setWrapperDivNameOnInsert":false},{"code":"<div id=\"tableContainer\">\n    <table class=\"table mt-2\">\n    <!-- Table Contents -->\n    </table>\n</div>","type":"html","displayName":"Tables - Table With Sticky Headers - HTML","setWrapperDivNameOnInsert":false},{"code":"#tableContainer2 .stickyColumn1.stickyHeader, #tableContainer2 .stickyColumn2.stickyHeader {\n    z-index: 2;\n}\n\n#tableContainer2 .stickyColumn1 {\n    position: sticky;\n    background-color: white;\n    border-right: none;\n    left: 0;\n    width: 150px;\n    height: 1px;\n    top: auto;\n    z-index: 1;\n    padding: 0px;\n}\n\n#tableContainer2 .stickyColumn1 div {\n    border-right: 1px solid #eee;\n    width: 150px;\n    height: 100%;\n    padding: 10px;\n}\n\n#tableContainer2 .stickyColumn2 {\n    position: sticky;\n    background-color: white;\n    left: 150px;\n    height: 1px;\n    top: auto;\n    z-index: 1;\n    padding: 0px;\n}\n\n#tableContainer2 .stickyColumn2 div {\n    border-right: 1px solid #eee;\n    height: 100%;\n    padding: 10px;\n}\n\n#tableContainer2 .stickyHeader {\n    position: sticky;\n    top: 0px;\n    background-color: white;\n    box-shadow: 0 2px 1px -1px #efefef;\n    z-index: 1;\n}\n\n#tableContainer2 {\n    overflow-x: auto;\n    max-height:500px;\n}   ","type":"css","displayName":"Tables - Table With Sticky Headers and Sticky Columns - CSS","setWrapperDivNameOnInsert":false},{"code":"<div id=\"tableContainer2\">\n    <table class=\"table mt-2\">\n        <thead>\n            <tr>\n                <th class=\"stickyColumn1 stickyHeader\"><div>Name</div></th>\n                <th class=\"stickyColumn2 stickyHeader\"><div>ID</div></th>\n                <th class=\"stickyHeader\">Created By</th>\n                <th class=\"stickyHeader\">Created On</th>\n                <th class=\"stickyHeader\">Owner</th>\n                <th class=\"stickyHeader\">Progress</th>\n                <th class=\"stickyHeader\">Attainment</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"kr in data.default\">\n                <td class=\"stickyColumn1\"><div>{{kr.name}}</div></td>\n                <td class=\"stickyColumn2\"><div>{{kr.id}}</div></td>\n                <td><assignee id=\"{{kr.createdbyid}}\"></assignee></td>\n                <td>{{kr.datecreated | date}}</td>\n                <td><assignee id=\"{{kr.ownerid}}\"></assignee></td>\n                <td>{{kr.progressstatus}}</td>\n                <td>{{kr.attainment}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>","type":"html","displayName":"Tables - Table With Sticky Headers and Sticky Columns - HTML","setWrapperDivNameOnInsert":false},{"code":"#tableContainer .stickyColumn {\n    position: sticky;\n    background-color: white;\n    left: 0;\n    top: auto;\n    z-index: 1;\n}\n\n#tableContainer {\n    overflow-x: auto;\n    height: 500px;\n}\n\n","type":"css","displayName":"Tables - Tables With Sticky Columns - One Sticky Column","setWrapperDivNameOnInsert":false},{"code":"<div id=\"tableContainer\">\n    <table>\n        <thead>\n            <tr>\n                <th class=\"stickyColumn\">Name</th>\n                <th>ID</th>\n                <th>Created By</th>\n                <th>Created On</th>\n                <th>Owner</th>\n                <th>Progress</th>\n                <th>Attainment</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"kr in data.default\">\n                <td class=\"stickyColumn\">{{kr.name}}</td>\n                <td>{{kr.id}}</td>\n                <td><assignee id=\"{{kr.createdbyid}}\"></assignee></td>\n                <td>{{kr.datecreated | date}}</td>\n                <td><assignee id=\"{{kr.ownerid}}\"></assignee></td>\n                <td>{{kr.progressstatus}}</td>\n                <td>{{kr.attainment}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>","type":"html","displayName":"Tables - Tables With Sticky Columns - One Sticky Column","setWrapperDivNameOnInsert":false},{"code":"#tableContainer .stickyColumn1 {\n    position: sticky;\n    background-color: white;\n    border-right: none;\n    left: 0;\n    width: 150px;\n    height: 1px;\n    top: auto;\n    z-index: 1;\n    padding: 0px;\n}\n\n#tableContainer .stickyColumn1 div {\n    border-right: 1px solid #eee;\n    width: 150px;\n    height: 100%;\n    padding: 10px;\n}\n\n#tableContainer .stickyColumn2 {\n    position: sticky;\n    background-color: white;\n    left: 150px;\n    height: 1px;\n    top: auto;\n    z-index: 1;\n    padding: 0px;\n}\n\n#tableContainer .stickyColumn2 div {\n    border-right: 1px solid #eee;\n    height: 100%;\n    padding: 10px;\n}\n\n#tableContainer {\n    overflow-x: auto;\n    max-height:500px;\n}","type":"css","displayName":"Tables - Tables With Sticky Columns - Multiple Sticky Column","setWrapperDivNameOnInsert":false},{"code":"<div id=\"tableContainer\">\n    <table class=\"table mt-2\">\n        <thead>\n            <tr>\n                <th class=\"stickyColumn1\"><div>Name</div></th>\n                <th class=\"stickyColumn2\"><div>ID</div></th>\n                <th>Created By</th>\n                <th>Created On</th>\n                <th>Owner</th>\n                <th>Progress</th>\n                <th>Attainment</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"kr in data.default\">\n                <td class=\"stickyColumn1\"><div>{{kr.name}}</div></td>\n                <td class=\"stickyColumn2\"><div>{{kr.id}}</div></td>\n                <td><assignee id=\"{{kr.createdbyid}}\"></assignee></td>\n                <td>{{kr.datecreated | date}}</td>\n                <td><assignee id=\"{{kr.ownerid}}\"></assignee></td>\n                <td>{{kr.progressstatus}}</td>\n                <td>{{kr.attainment}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>","type":"html","displayName":"Tables - Tables With Sticky Columns - Multiple Sticky Column","setWrapperDivNameOnInsert":false},{"code":"<tabset>\n    <tab heading=\"Heading 1\">\n        <!-- tab 1 content -->\n    </tab>\n    <tab heading=\"Heading 2\">\n        <!-- tab 2 content -->\n    </tab>\n    <tab heading=\"Heading 3\">\n        <!-- tab 3 content -->\n    </tab>\n</tabset>","type":"html","displayName":"Tabs - Angular Tabset","setWrapperDivNameOnInsert":false},{"code":"<tabset>\n    <tab heading=\"Name of Tab\">\n        <table class=\"table mt-2\">\n            <tr>\n                <th ng-click=\"orderKey = 'property1'; reverse = !reverse;\">Header</th>\n                <th ng-click=\"orderKey = 'property2'; reverse = !reverse;\">Header</th>\n                <th ng-click=\"orderKey = 'property3'; reverse = !reverse;\">Header</th>\n            </tr>\n            <tr ng-repeat=\"data in data.default | orderBy : orderKey : reverse\">\n                <td class=\"bigger-120 regular\">{{data.property1}}</td>\n                <td>{{data.property2}}</td>\n                <td>{{data.property3}}</td>\n            </tr>\n        </table>\n    </tab>\n    <tab heading=\"Name of Tab\">\n        <!-- Other table, graph, or information -->\n    </tab>\n</tabset>","type":"html","displayName":"Tabs - Tab Containing Table","setWrapperDivNameOnInsert":false}]